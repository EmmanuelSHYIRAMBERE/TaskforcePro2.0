paths:
  /api/v1/expenses:
    post:
      summary: Create a new expense
      tags:
        - Expenses
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - category
                - account
              properties:
                amount:
                  type: number
                  description: Expense amount
                description:
                  type: string
                  description: Expense description
                date:
                  type: string
                  format: date-time
                  description: Date of expense
                category:
                  type: string
                  description: Category ID
                subcategory:
                  type: string
                  description: Subcategory ID
                account:
                  type: string
                  description: Account type (e.g., bank, cash, mobile money)
                tags:
                  type: array
                  items:
                    type: string
                attachments:
                  type: array
                  items:
                    type: string
                isRecurring:
                  type: boolean
                recurringFrequency:
                  type: string
                  enum: [daily, weekly, monthly, yearly]
                nextRecurringDate:
                  type: string
                  format: date-time
      responses:
        201:
          description: Expense created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseResponse"

    get:
      summary: Get all expenses
      tags:
        - Expenses
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: List of expenses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  results:
                    type: number
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Expense"

  /api/v1/expenses/category/{categoryId}:
    get:
      summary: Get expenses by category
      tags:
        - Expenses
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of expenses for the category
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  results:
                    type: number
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Expense"

  /api/v1/expenses/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string

    get:
      summary: Get a specific expense
      tags:
        - Expenses
      security:
        - BearerAuth: []
      responses:
        200:
          description: Expense details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseResponse"

    patch:
      summary: Update an expense
      tags:
        - Expenses
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpenseUpdate"
      responses:
        200:
          description: Expense updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseResponse"

    delete:
      summary: Delete an expense
      tags:
        - Expenses
      security:
        - BearerAuth: []
      responses:
        204:
          description: Expense deleted successfully

components:
  schemas:
    Expense:
      type: object
      properties:
        _id:
          type: string
        user:
          type: string
        amount:
          type: number
        description:
          type: string
        date:
          type: string
          format: date-time
        category:
          $ref: "#/components/schemas/Category"
        subcategory:
          $ref: "#/components/schemas/Category"
        account:
          type: string
        tags:
          type: array
          items:
            type: string
        attachments:
          type: array
          items:
            type: string
        isRecurring:
          type: boolean
        recurringFrequency:
          type: string
          enum: [daily, weekly, monthly, yearly]
        nextRecurringDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ExpenseUpdate:
      type: object
      properties:
        amount:
          type: number
        description:
          type: string
        date:
          type: string
          format: date-time
        category:
          type: string
        subcategory:
          type: string
        account:
          type: string
        tags:
          type: array
          items:
            type: string
        attachments:
          type: array
          items:
            type: string
        isRecurring:
          type: boolean
        recurringFrequency:
          type: string
          enum: [daily, weekly, monthly, yearly]
        nextRecurringDate:
          type: string
          format: date-time

    ExpenseResponse:
      type: object
      properties:
        status:
          type: string
        data:
          $ref: "#/components/schemas/Expense"
